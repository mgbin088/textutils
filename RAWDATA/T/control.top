# this function is executed once for every new user chatting with harry
outputmacro: harry()  # you get harry by default
$cs_token = #DO_INTERJECTION_SPLITTING  | #DO_SUBSTITUTE_SYSTEM   | #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE    | #DO_PARSE 

#addtopic一般增加的是欢迎topic，这样用户登进来会主动询问
^addtopic(~introductions)
$cs_control_main = ~control
# $cs_control_post = ~XPOSTPROCESS  # uncomment to enable talk
$userprompt = ^"%user: >"
$botprompt = ^"药药: "
$singleResponse = 1 # issue only 1 output message


table: defaultbot (^name)
^createfact(^name defaultbot defaultbot)
DATA:
harry

topic: ~control system ()

# on startup, do introduction
u: ( %input<%userfirstline) 
	gambit(~introductions)

u: (< shut up >) $shutup = 1
u: (< talk  >) $shutup = null

u: (\[ callback \]) Callback seen.
u: (\[ loopback \]) Loopback seen.
u: (\[ alarm \]) Alarm seen.
u: (< loopback test) \[ loopback=1000 \] Loopback requested.
u: (< callback test) \[ callback=1000 \] Callback requested.
u: (< alarm test) \[ alarm=5000 \] Alarm requested.

u: () # main per-sentence processing
	# There is a system variable %response which will tell you the number of committed responses
	$_responseCount = %response
	if ($singleResponse) {$_responseCount = 0} # disable this to respond to each sentence in a volley

	# $$ 全局变量  %topic正在使用的topic
	$$currenttopic = %topic		# get the current topic at start of volley

	# 先找rejoinder
	# nofail TOPIC 规则出错不外抛。 rejoinder(): 判断输入是否能匹配rejoinder
	if ( %response == $_responseCount ) {nofail(TOPIC ^rejoinder())}	# try for rejoinders. might generate an answer directly from what we are looking for.

	# 如果rejoinder没有，用户没有任何输入，找gambit，就是t
	# %length the length in tokens of the current sentence
	if (%length == 0 AND %response == $_responseCount )
	{
		nofail(TOPIC ^gambit($$currenttopic))  # gambit current topic since no input (usually start of conversation)
	}

	# gambit找不到，找正常的respond
	if (%response == $_responseCount) { nofail(TOPIC ^respond($$currenttopic)) } # current topic tries to respond to his input


	# 如果当前topic都没法正常响应
	if (%response == $_responseCount) # see if some other topic has keywords matching his input (given we have no response yet)
	{
		# 找关键词匹配的topic
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^respond($$topic))
			if (%response != $_responseCount) # stop when we find something to say
			{
				^end(RULE)	# we are done, this terminates the loop (not the rule)
			}
		}
	}	


	if (%response == $_responseCount) 
	{
		nofail(TOPIC ^respond(~test))
	}



	# having no good response we know, now generate quibbles

	# now we need to find fake responses 
	# %rand	get a random number from 1 to 100 inclusive
	if (%response == $_responseCount AND %rand > 50)
	{
		nofail(TOPIC respond(~QUIBBLE_ALL))
	}

	# if we have rejoinders for what we said OR we asked a question, stop here
	if (%outputrejoinder OR %lastquestion) 
	{
		# 结束当前的topic
		end(TOPIC)
	}


	# 
	if (%response == $_responseCount AND ^marked($$currenttopic)) { nofail(TOPIC ^gambit($$currenttopic)) } # gambit current topic since keywords match current topic

	if (%response == $_responseCount) # gambit from ANY matching topic
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^Gambit($$topic))	# gambit in best matching topic
			if (%response != $_responseCount) # stop when we find something
			{
				^end(RULE)
			}
		}
	}
	if (%response == $_responseCount){ nofail(TOPIC ^gambit($$currenttopic)) } # gambit from current topic even though no keywords matched
	
	if (%response == $_responseCount) 
	{ 
		@8 = ^GambitTopics()		# all topics with gambits (excluding system topics)
		loop()
		{
			$$topic = pick(@8subject)
			nofail(TOPIC ^Gambit($$topic))	# try a topic at random
			if (%response != $_responseCount)
			{
				^end(RULE)
			}
		}
	}
	
	if (%response == $_responseCount) 
	{
		 ^repeat() 
		 抱歉，我不知道该怎么回答你 
	}


topic: ~XPOSTPROCESS system () # gambits only - not allowed to write to  output - generates speech on windows -- for Linux you'd want to install Festival (or equivalent) and call that instead.

t: (^query(direct_v ? chatoutput ? -1 ? @9  ))  # get the sentences  (why is the object) -- no longer has quotes around it
	loop()
	{
		$$tmp = ^last(@9subject) # note last output which is quoted string
		if (!%server AND %os == windows  AND !$SHUTUP)
		{
			$$tmp = ^"talk \"$$tmp\" "
			popen($$tmp null)
		}
        if (!%server AND %os == mac  AND !$SHUTUP)
        {
            $$shellerror = system(^"say \"$$tmp\" ")
        }
	}
